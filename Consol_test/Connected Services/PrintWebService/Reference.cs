//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Consol_test.PrintWebService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PrintWebService.IPrintWebService")]
    public interface IPrintWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/Print", ReplyAction="http://tempuri.org/IPrintWebService/PrintResponse")]
        bool Print(int nbCopies, string productName, int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/Print", ReplyAction="http://tempuri.org/IPrintWebService/PrintResponse")]
        System.Threading.Tasks.Task<bool> PrintAsync(int nbCopies, string productName, int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/TransferMoneyWithCardId", ReplyAction="http://tempuri.org/IPrintWebService/TransferMoneyWithCardIdResponse")]
        void TransferMoneyWithCardId(int cardId, float quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/TransferMoneyWithCardId", ReplyAction="http://tempuri.org/IPrintWebService/TransferMoneyWithCardIdResponse")]
        System.Threading.Tasks.Task TransferMoneyWithCardIdAsync(int cardId, float quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/TransferMoneyWithUsername", ReplyAction="http://tempuri.org/IPrintWebService/TransferMoneyWithUsernameResponse")]
        void TransferMoneyWithUsername(string userName, float quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/TransferMoneyWithUsername", ReplyAction="http://tempuri.org/IPrintWebService/TransferMoneyWithUsernameResponse")]
        System.Threading.Tasks.Task TransferMoneyWithUsernameAsync(string userName, float quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/GetUserByCardId", ReplyAction="http://tempuri.org/IPrintWebService/GetUserByCardIdResponse")]
        Consol_test.PrintWebService.User GetUserByCardId(int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/GetUserByCardId", ReplyAction="http://tempuri.org/IPrintWebService/GetUserByCardIdResponse")]
        System.Threading.Tasks.Task<Consol_test.PrintWebService.User> GetUserByCardIdAsync(int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/DebitAccount", ReplyAction="http://tempuri.org/IPrintWebService/DebitAccountResponse")]
        void DebitAccount(int nbCopies, string productName, int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/DebitAccount", ReplyAction="http://tempuri.org/IPrintWebService/DebitAccountResponse")]
        System.Threading.Tasks.Task DebitAccountAsync(int nbCopies, string productName, int cardId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPrintWebServiceChannel : Consol_test.PrintWebService.IPrintWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrintWebServiceClient : System.ServiceModel.ClientBase<Consol_test.PrintWebService.IPrintWebService>, Consol_test.PrintWebService.IPrintWebService {
        
        public PrintWebServiceClient() {
        }
        
        public PrintWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PrintWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrintWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrintWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Print(int nbCopies, string productName, int cardId) {
            return base.Channel.Print(nbCopies, productName, cardId);
        }
        
        public System.Threading.Tasks.Task<bool> PrintAsync(int nbCopies, string productName, int cardId) {
            return base.Channel.PrintAsync(nbCopies, productName, cardId);
        }
        
        public void TransferMoneyWithCardId(int cardId, float quota) {
            base.Channel.TransferMoneyWithCardId(cardId, quota);
        }
        
        public System.Threading.Tasks.Task TransferMoneyWithCardIdAsync(int cardId, float quota) {
            return base.Channel.TransferMoneyWithCardIdAsync(cardId, quota);
        }
        
        public void TransferMoneyWithUsername(string userName, float quota) {
            base.Channel.TransferMoneyWithUsername(userName, quota);
        }
        
        public System.Threading.Tasks.Task TransferMoneyWithUsernameAsync(string userName, float quota) {
            return base.Channel.TransferMoneyWithUsernameAsync(userName, quota);
        }
        
        public Consol_test.PrintWebService.User GetUserByCardId(int cardId) {
            return base.Channel.GetUserByCardId(cardId);
        }
        
        public System.Threading.Tasks.Task<Consol_test.PrintWebService.User> GetUserByCardIdAsync(int cardId) {
            return base.Channel.GetUserByCardIdAsync(cardId);
        }
        
        public void DebitAccount(int nbCopies, string productName, int cardId) {
            base.Channel.DebitAccount(nbCopies, productName, cardId);
        }
        
        public System.Threading.Tasks.Task DebitAccountAsync(int nbCopies, string productName, int cardId) {
            return base.Channel.DebitAccountAsync(nbCopies, productName, cardId);
        }
    }
}
