//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrintWebService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    public partial class User : object
    {
        
        private decimal BalanceField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance
        {
            get
            {
                return this.BalanceField;
            }
            set
            {
                this.BalanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PrintWebService.IPrintWebService")]
    public interface IPrintWebService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/Print", ReplyAction="http://tempuri.org/IPrintWebService/PrintResponse")]
        bool Print(int nbCopies, string productName, int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/Print", ReplyAction="http://tempuri.org/IPrintWebService/PrintResponse")]
        System.Threading.Tasks.Task<bool> PrintAsync(int nbCopies, string productName, int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/TransferMoneyWithCardId", ReplyAction="http://tempuri.org/IPrintWebService/TransferMoneyWithCardIdResponse")]
        void TransferMoneyWithCardId(int cardId, decimal quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/TransferMoneyWithCardId", ReplyAction="http://tempuri.org/IPrintWebService/TransferMoneyWithCardIdResponse")]
        System.Threading.Tasks.Task TransferMoneyWithCardIdAsync(int cardId, decimal quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/TransferMoneyWithUsername", ReplyAction="http://tempuri.org/IPrintWebService/TransferMoneyWithUsernameResponse")]
        void TransferMoneyWithUsername(string userName, decimal quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/TransferMoneyWithUsername", ReplyAction="http://tempuri.org/IPrintWebService/TransferMoneyWithUsernameResponse")]
        System.Threading.Tasks.Task TransferMoneyWithUsernameAsync(string userName, decimal quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/GetUserByCardId", ReplyAction="http://tempuri.org/IPrintWebService/GetUserByCardIdResponse")]
        PrintWebService.User GetUserByCardId(int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/GetUserByCardId", ReplyAction="http://tempuri.org/IPrintWebService/GetUserByCardIdResponse")]
        System.Threading.Tasks.Task<PrintWebService.User> GetUserByCardIdAsync(int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/DebitAccount", ReplyAction="http://tempuri.org/IPrintWebService/DebitAccountResponse")]
        void DebitAccount(int nbCopies, string productName, int cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintWebService/DebitAccount", ReplyAction="http://tempuri.org/IPrintWebService/DebitAccountResponse")]
        System.Threading.Tasks.Task DebitAccountAsync(int nbCopies, string productName, int cardId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface IPrintWebServiceChannel : PrintWebService.IPrintWebService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class PrintWebServiceClient : System.ServiceModel.ClientBase<PrintWebService.IPrintWebService>, PrintWebService.IPrintWebService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PrintWebServiceClient() : 
                base(PrintWebServiceClient.GetDefaultBinding(), PrintWebServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IPrintWebService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PrintWebServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(PrintWebServiceClient.GetBindingForEndpoint(endpointConfiguration), PrintWebServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PrintWebServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PrintWebServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PrintWebServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PrintWebServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PrintWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public bool Print(int nbCopies, string productName, int cardId)
        {
            return base.Channel.Print(nbCopies, productName, cardId);
        }
        
        public System.Threading.Tasks.Task<bool> PrintAsync(int nbCopies, string productName, int cardId)
        {
            return base.Channel.PrintAsync(nbCopies, productName, cardId);
        }
        
        public void TransferMoneyWithCardId(int cardId, decimal quota)
        {
            base.Channel.TransferMoneyWithCardId(cardId, quota);
        }
        
        public System.Threading.Tasks.Task TransferMoneyWithCardIdAsync(int cardId, decimal quota)
        {
            return base.Channel.TransferMoneyWithCardIdAsync(cardId, quota);
        }
        
        public void TransferMoneyWithUsername(string userName, decimal quota)
        {
            base.Channel.TransferMoneyWithUsername(userName, quota);
        }
        
        public System.Threading.Tasks.Task TransferMoneyWithUsernameAsync(string userName, decimal quota)
        {
            return base.Channel.TransferMoneyWithUsernameAsync(userName, quota);
        }
        
        public PrintWebService.User GetUserByCardId(int cardId)
        {
            return base.Channel.GetUserByCardId(cardId);
        }
        
        public System.Threading.Tasks.Task<PrintWebService.User> GetUserByCardIdAsync(int cardId)
        {
            return base.Channel.GetUserByCardIdAsync(cardId);
        }
        
        public void DebitAccount(int nbCopies, string productName, int cardId)
        {
            base.Channel.DebitAccount(nbCopies, productName, cardId);
        }
        
        public System.Threading.Tasks.Task DebitAccountAsync(int nbCopies, string productName, int cardId)
        {
            return base.Channel.DebitAccountAsync(nbCopies, productName, cardId);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPrintWebService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPrintWebService))
            {
                return new System.ServiceModel.EndpointAddress("http://153.109.124.35:83/BiollazGaillardPWS/PrintWebService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return PrintWebServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IPrintWebService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return PrintWebServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IPrintWebService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IPrintWebService,
        }
    }
}
